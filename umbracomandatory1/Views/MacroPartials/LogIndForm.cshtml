@inherits Umbraco.Web.Macros.PartialViewMacroPage


@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using Umbraco.Web.Models
@using Umbraco.Web.Controllers

@{
    var loginModel = new LoginModel();
    
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("/umbraco_client/ui/jquery.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.min.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.unobtrusive.min.js");
}

@* NOTE: This RenderJsHere code should be put on your main template page where the rest of your script tags are placed *@
@Html.RenderJsHere()

@using (Html.BeginUmbracoForm<UmbLoginController>("HandleLogin"))
{
if (!Members.GetCurrentLoginStatus().IsLoggedIn){
    <fieldset>
        <legend>Login</legend>
        <div class="container">
    <div class="form-group">
        @Html.ValidationSummary("loginModel", true)
        
         @Html.LabelFor(m => loginModel.Username, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
        @Html.TextBoxFor(m => loginModel.Username, new { @class = "form-control", placeholder = "Username" })
                @Html.ValidationMessageFor(m => loginModel.Username)
           </div>     
        <br/>
        @Html.LabelFor(m => loginModel.Password, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
        @Html.PasswordFor(m => loginModel.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => loginModel.Password)
</div>
        <!--@Html.LabelFor(m => loginModel.Username)-->
        <!--@Html.TextBoxFor(m => loginModel.Username)-->
        <!--@Html.ValidationMessageFor(m => loginModel.Username)-->
        <!--<br />-->

        <!--@Html.LabelFor(m => loginModel.Password)-->
        <!--@Html.PasswordFor(m => loginModel.Password)-->
        <!--@Html.ValidationMessageFor(m => loginModel.Password)-->
        <br />

        <button>Login</button>
        </div>
        </div>
    </fieldset>  
    }else{
    <p>you are already logged in as @Members.GetCurrentLoginStatus().Name</p>
    var logoutModel= new PostRedirectModel();
    logoutModel.RedirectUrl= "/";
    using(Html.BeginUmbracoForm<UmbLoginStatusController>("HandleLogout")) {<button>Logout</button>@Html.HiddenFor(m => logoutModel.RedirectUrl)}
}
}